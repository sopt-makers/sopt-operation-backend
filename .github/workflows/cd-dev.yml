name: cd-dev

on:
  workflow_dispatch:
  push:
    branches: [ develop ]

jobs:
  build-and-push-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: üîí Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Create Property
        run: |
          touch ./operation-api/src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_DEV }}" >> ./operation-api/src/main/resources/application-dev.yml
          
          mkdir -p ./operation-api/src/main/resources/static
          echo "${{ secrets.APPLE_KEY }}" | base64 --decode > ./operation-api/src/main/resources/static/${{ secrets.APPLE_KEY_NAME }}

      - name: üß± Build Image and Push to ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ECR_REPO: ${{ secrets.AWS_ECR_REPO_DEV }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker build -t $AWS_ECR_REPO .
          docker tag $AWS_ECR_REPO:latest public.ecr.aws/$AWS_ACCOUNT_ID/$AWS_ECR_REPO:latest
          docker push public.ecr.aws/$AWS_ACCOUNT_ID/$AWS_ECR_REPO:latest

      - name: üìù Copy Script File
        env:
          REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
        run: |
          mkdir script
          aws s3 cp --region $REGION \
            s3://$S3_BUCKET/dev/script/deploy.sh script/deploy.sh
          aws s3 cp --region $REGION \
            s3://$S3_BUCKET/dev/script/switch.sh script/switch.sh
          aws s3 cp --region $REGION \
            s3://$S3_BUCKET/dev/script/valid.sh script/valid.sh

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip ./script
        shell: bash

      - name: Upload Property Zip to S3 and Create Code Deploy
        env:
          REGION: ${{ secrets.AWS_REGION }}
          DEPLOY_APPLICATION: ${{ secrets.AWS_DEPLOY_APPLICATION }}
          DEPLOY_GROUP: ${{ secrets.AWS_DEPLOY_GROUP_DEV }}
          S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
        run: |
          aws s3 cp --region $REGION ./$GITHUB_SHA.zip s3://$S3_BUCKET/dev/deploy/$GITHUB_SHA.zip
          
          aws deploy create-deployment --application-name $AWS_DEPLOY_APPLICATION_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOY_GROUP
          --s3-location bucket=$S3_BUCKET,bundleType=zip,key=dev/deploy/$GITHUB_SHA.zip