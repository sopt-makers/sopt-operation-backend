name: cd-dev

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-22.04

    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: üîí Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: üß± Build Image and Push to ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ECR_REPO: ${{ secrets.AWS_ECR_REPO_PROD }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker build -t $AWS_ECR_REPO --build-arg PROFILE=prod .
          docker tag $AWS_ECR_REPO:latest public.ecr.aws/$AWS_ACCOUNT_ID/$AWS_ECR_REPO:latest
          docker push public.ecr.aws/$AWS_ACCOUNT_ID/$AWS_ECR_REPO:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout
        uses: actions/checkout@v3

      - name: üîí Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: üìù Copy Files from S3
        env:
          REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
        run: |
          aws s3 cp --region $REGION \
            s3://$S3_BUCKET/prod/prod.env ./application.env

      - name: üîÑ Transfer Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ec2-user
          key: ${{ secrets.PEM_KEY_PROD }}
          port: 22
          source: "application.env"
          target: /home/ubuntu/operation/env
          overwrite: true

      - name: üöÄSSH command deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PEM_KEY_PROD }}
          port: 22
          script: |
            /home/ubuntu/operation/scripts/deploy.sh
